public class PCB implements Comparable<PCB> {
	
	private int id;
    private int burstTime;
    private int remainingTime;
    private int memoryRequired;
    private int waitingTime;
    private int turnaroundTime;
    private int submissionTime;
    private String state;

    public PCB(int id, int burstTime, int memoryRequired) {
        this.id = id;
        this.burstTime = burstTime;
        this.memoryRequired = memoryRequired;
        remainingTime = burstTime;
        waitingTime = 0;
        turnaroundTime = 0;
        state = "NEW";
    }

   
    public void changeState(String state) {
        this.state = state;
    }

    // Setters & Getters
    public int getRemainingTime() {
        return remainingTime;
    }

    public void setRemainingTime(int remainingTime) {
        this.remainingTime = remainingTime;
    }

    public int getWaitingTime() {
        return waitingTime;
    }

    public void setWaitingTime(int waitingTime) {
        this.waitingTime = waitingTime;
    }

    public int getTurnaroundTime() {
        return turnaroundTime;
    }

    public void setTurnaroundTime(int turnaroundTime) {
        this.turnaroundTime = turnaroundTime;
    }

	public int getId() {
		return id;
	}


	public int getMemoryRequired() {
		return memoryRequired;
	}


	@Override // Method to help us applying SJF Scheduling
	public int compareTo(PCB other) {
		
		return Integer.compare(this.burstTime, other.burstTime);
	}


	public int getBurstTime() {
		return burstTime;
	}


	public int getSubmissionTime() {
		return submissionTime;
	}


	public void setSubmissionTime(int submissionTime) {
		this.submissionTime = submissionTime;
	}
	
	
}
